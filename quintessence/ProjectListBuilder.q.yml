properties:
  - name: repos_directory
    type: std::string
    init_with: "\"/Users/markoates/Repos/\""
    constructor_arg: true
    getter: true
functions:
  - name: get_directories
    type: std::vector<std::string>
    body: |
      if (repos_directory.empty() || repos_directory.back() != '/')
      {
         std::stringstream error_message;
         error_message << "[ProjectListBuilder::get_directories error:] "
                       << "repos_directory must end in '/' character.";
         throw std::runtime_error(error_message.str());
      }

      std::vector<std::string> result = {};

      int repos_directory_length = repos_directory.length();
      for (const auto& entry : std::filesystem::directory_iterator(repos_directory))
      {
         std::string directory = entry.path().string();
         directory = directory.substr(repos_directory_length);
         result.push_back(directory);
      }

      return result;
    body_dependency_symbols:
      - std::filesystem::directory_iterator
      - std::stringstream
dependencies:
  - symbol: std::filesystem::directory_iterator
    headers: [ filesystem ]
